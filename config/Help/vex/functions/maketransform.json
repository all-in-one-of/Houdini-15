{"body": [{"indent": 0, "text": ["maketransform"], "type": "title", "extent": [0, 18], "level": 0}, {"indent": 0, "type": "summary", "extent": [77, 122], "text": ["Builds a 3\u00d73 or 4\u00d74 transform matrix."]}, {"body": [{"indent": 0, "role": "item", "type": "usage", "extent": [122, 182], "text": [" ", {"text": ["matrix3 maketransform(vector zaxis, vector yaxis)"], "type": "code"}]}, {"indent": 0, "role": "item", "type": "usage", "extent": [182, 238], "text": [" ", {"text": ["matrix3 maketransform(int xyz, vector angles)"], "type": "code"}]}, {"indent": 0, "role": "item", "type": "usage", "extent": [238, 315], "text": [" ", {"text": ["matrix maketransform(vector zaxis, vector yaxis, vector translate)"], "type": "code"}]}, {"indent": 0, "role": "item", "type": "usage", "extent": [315, 400], "text": [" ", {"text": ["matrix maketransform(int trs, int xyz; const vector t, vector r, vector s)"], "type": "code"}]}, {"indent": 0, "role": "item", "type": "usage", "extent": [400, 495], "text": [" ", {"text": ["matrix maketransform(int trs, int xyz; const vector t, vector r, vector s, vector p)"], "type": "code"}]}, {"indent": 0, "role": "item", "type": "usage", "extent": [495, 601], "text": [" ", {"text": ["matrix maketransform(int trs, int xyz; const vector t, vector r, vector s, vector p, vector pr)"], "type": "code"}]}, {"indent": 0, "role": "item", "type": "usage", "extent": [601, 723], "text": [" ", {"text": ["matrix maketransform(int trs, int xyz; const vector t, vector r, vector s, vector p, vector pr, vector shears)"], "type": "code"}]}], "container": true, "role": "item_group", "type": "usage_group"}, {"indent": 0, "type": "para", "extent": [723, 762], "text": ["Builds a 3\u00d73 or 4\u00d74 transform matrix."]}, {"indent": 0, "type": "para", "extent": [762, 1183], "text": [{"text": ["maketransform(int trs, ...)"], "type": "code"}, " builds a general 4\u00d74 transform matrix\ngiven an order of transformations (", {"text": ["trs"], "type": "var"}, "), an order for rotations\n(", {"text": ["xyz"], "type": "var"}, "), a vector representing the translation (", {"text": ["t"], "type": "var"}, "), rotation\n(", {"text": ["r"], "type": "var"}, "), scale (", {"text": ["s"], "type": "var"}, ") (and optionally a pivot (", {"text": ["p"], "type": "var"}, "), pivot rotatation\n(", {"text": ["pr"], "type": "var"}, "), and shears (", {"text": ["shears"], "type": "var"}, ")). The specifications for the ", {"text": ["trs"], "type": "var"}, " and\n", {"text": ["xyz"], "type": "var"}, " parameters can be found in ", {"text": ["$HFS/houdini/vex/include/math.h"], "type": "code"}]}, {"indent": 0, "type": "para", "extent": [1183, 1769], "text": [{"text": ["maketransform(vector zaxis, yaxis, ...)"], "type": "code"}, " builds either a 3\u00d73 transform\nmatrix or a 4\u00d74 transform matrix. The matrix will be constructed so that the \nz-axis will be transformed to the z-axis specified with the given up vector \n(yaxis). Thus, maketransform({0,0,1}, {0,1,0}) will result in an identity \nmatrix. The version which returns a 4\u00d74 transform will apply the translation \nto the 4\u00d74 matrix. This function is very similar to the ", {"text": ["lookat"], "value": "/vex/functions/lookat", "fallback_text": "lookat()", "fullpath": "/vex/functions/lookat", "scheme": "Vex", "type": "link"}, " \nfunction. The vectors passed in are ", {"text": ["not"], "type": "em"}, " normalized meaning that scales \nshould be preserved in construction of the transform."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [1775, 1869], "text": ["Unlike most VEX function, this function expects rotations \n    in ", {"text": ["degrees"], "type": "em"}, ", not radians."]}], "indent": 0, "role": "item", "type": "note", "extent": [1769, 1775]}], "container": true, "role": "item_group", "type": "note_group"}], "summary": ["Builds a 3\u00d73 or 4\u00d74 transform matrix."], "type": "root", "attrs": {"showtags": "true", "group": "transform", "type": "vex", "context": "all", "tags": "matrix"}, "title": ["maketransform"]}