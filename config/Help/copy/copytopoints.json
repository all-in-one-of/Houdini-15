{"body": [{"indent": 0, "text": ["Copying geometry to points"], "type": "title", "extent": [0, 31], "level": 0}, {"body": [{"indent": 4, "type": "para", "extent": [145, 300], "text": ["The ", {"text": "", "fullpath": "/copy/SOP/copytopoints", "scheme": "Icon", "type": "link", "value": "SOP/copytopoints"}, " ", {"text": ["Copy to Points node"], "fullpath": "/nodes/sop/copytopoints", "scheme": "Node", "type": "link", "value": "/nodes/sop/copytopoints"}, " copies one piece of geometry onto the ", {"text": ["points"], "type": "em"}, " of another piece of geometry."]}, {"indent": 4, "type": "para", "extent": [300, 337], "text": [{"text": "", "fullpath": "/copy/images/copytopoints.png", "scheme": "Image", "type": "link", "value": "images/copytopoints.png"}]}, {"indent": 4, "type": "para", "extent": [337, 578], "text": ["This is very useful for lots of effects, such as snow (copying flakes onto falling points), forests (scatter points on a ground surface and copy trees to them), cities (establish a grid of points and copy buildings to them), and so on."]}, {"indent": 4, "type": "para", "extent": [578, 779], "text": ["Copying is similar to ", {"text": ["instancing"], "fullpath": "/copy/instancing", "scheme": null, "type": "link", "value": "instancing"}, ", except copying creates real geometry you can manipulate further, allows ", {"fragment": "#vary", "text": ["more variations"], "value": "#vary", "fullpath": "/copy/copytopoints#vary", "scheme": null, "type": "link"}, ", and lets you create copies with unique attributes."]}], "indent": 0, "level": 2, "text": ["Overview"], "extent": [129, 145], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "ord", "extent": [2096, 2186], "text": ["Click the ", {"text": "", "fullpath": "/nodes/sop/SOP/copytopoints", "scheme": "Icon", "type": "link", "value": "SOP/copytopoints"}, " Copy to Points tool on the ", {"text": ["Modify"], "type": "ui"}, " tab."]}, {"indent": 0, "blevel": 2, "type": "ord", "extent": [2186, 2254], "text": ["Select the source geometry you want to copy and press ", {"keys": ["Enter"], "text": null, "type": "keys"}, "."]}, {"indent": 0, "blevel": 2, "type": "ord", "extent": [2254, 2347], "text": ["Select the target geometry on whose points to instantiate the source and press ", {"keys": ["Enter"], "text": null, "type": "keys"}, "."]}], "container": true, "type": "ord_group"}, {"indent": 0, "type": "para", "extent": [2347, 2380], "text": [{"text": "", "fullpath": "/images/shelf/copy.png", "scheme": "Image", "type": "link", "value": "/images/shelf/copy.png"}]}], "indent": 0, "level": 2, "text": ["How to"], "extent": [2075, 2096], "container": true, "type": "h", "id": "howto"}, {"body": [{"indent": 0, "type": "para", "extent": [867, 1231], "text": ["If the points you copy geometry onto have any of a set of special attributes, Houdini will automatically apply them to the copied geometry. For example, you can set the scale of each copy using ", {"text": ["pscale"], "type": "code"}, " (uniform) or ", {"text": ["scale"], "type": "code"}, " (non-uniform), or change their orientation using ", {"text": ["up"], "type": "code"}, ". See ", {"text": ["copying and instancing point attributes"], "fullpath": "/copy/instanceattrs", "scheme": null, "type": "link", "value": "instanceattrs"}, " for more information."]}], "indent": 0, "level": 2, "text": ["Transforming the copies"], "extent": [821, 867], "container": true, "type": "h", "id": "instanceattrs"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1289, 1546], "text": ["In previous versions of Houdini, this workflow was done using a process called ", {"text": ["copy stamping"], "type": "em"}, ". Newer versions of Houdini have a For-Each loop in the geometry network that makes this workflow more efficient, easier to set up, and easier to understand."]}], "indent": 0, "role": "item", "type": "note", "extent": [1282, 1289]}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 0, "type": "para", "extent": [1546, 1790], "text": ["The basic workflow for varying the copies when copying geometry to points is to set attributes on the points you are copying onto, then use a For-Each loop to copy the geometry onto one point at a time, modifying the geometry within the loop."]}, {"indent": 0, "type": "para", "extent": [1790, 1862], "text": [{"text": ["See the tutorial"], "fullpath": "/copy/tutorial_stamping", "scheme": null, "type": "link", "value": "tutorial_stamping"}, " for an example of varying copies."]}, {"indent": 0, "type": "para", "extent": [1862, 2057], "text": ["(Remember that if all you want is to move, rotate, and/or scale each copy, Houdini will do that automatically if you use the right ", {"text": ["attributes"], "fullpath": "/copy/instanceattrs", "scheme": null, "type": "link", "value": "instanceattrs"}, ", without needing a For-Each loop.)"]}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [2110, 2234], "text": ["Create ", {"text": ["attributes"], "fullpath": "/model/attributes", "scheme": null, "type": "link", "value": "/model/attributes"}, " on the target points containing the information you need to create the variations."]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [2234, 2438], "text": ["You can create attributes using an ", {"text": ["Attribute Create node"], "fullpath": "/nodes/sop/attribcreate", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribcreate"}, ". Or if you're comfortable with ", {"text": ["VEX snippets"], "fullpath": "/vex/snippets", "scheme": null, "type": "link", "value": "/vex/snippets"}, ", you can use an ", {"text": ["Attribute Wrangle"], "fullpath": "/nodes/sop/attribwrangle", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribwrangle"}, "."]}, {"body": [{"indent": 4, "type": "para", "extent": [2667, 2882], "text": ["To do this in an ", {"text": ["Attribute Create"], "fullpath": "/nodes/sop/attribcreate", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribcreate"}, ", set the attribute\u2019s ", {"text": ["Name"], "type": "ui"}, " to ", {"text": ["piecenum"], "type": "code"}, ", the ", {"text": ["Class"], "type": "ui"}, " to \"Point\", the ", {"text": ["Type"], "type": "ui"}, " to \"Integer\", and the first ", {"text": ["Value"], "type": "ui"}, " field to ", {"text": ["rand($PT) * 3"], "type": "code"}, "."]}, {"indent": 4, "type": "para", "extent": [2882, 2969], "text": ["In an ", {"text": ["Attribute Wrangle"], "fullpath": "/nodes/sop/attribwrangle", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribwrangle"}, ", you could use this snippet:"]}, {"lang": "vex", "indent": 4, "type": "pre", "extent": [2969, 3035], "text": ["\n    i@piecenum = int(rand(@ptnum) * 3);\n    "]}], "indent": 0, "text": ["For example, you might want to randomly switch between three different pieces of geometry on each point. In this case you could create a ", {"text": ["piecenum"], "type": "code"}, " point attribute on the target points with a random value of ", {"text": ["0"], "type": "code"}, ", ", {"text": ["1"], "type": "code"}, ", or ", {"text": ["2"], "type": "code"}, "."], "extent": [2438, 2667], "blevel": 2, "type": "bullet"}, {"body": [{"indent": 4, "type": "para", "extent": [3255, 3358], "text": ["(When you copy the point number into an attribute, the convention is to call the attribute ", {"text": ["id"], "type": "code"}, ".)"]}], "indent": 0, "text": ["Each point has a unique number (though the point number can change if the geometry is modified). To copy the point number into an attribute so you can use it when copying, use an ", {"text": ["Enumerate node"], "fullpath": "/nodes/sop/enumerate", "scheme": "Node", "type": "link", "value": "/nodes/sop/enumerate"}, "."], "extent": [3035, 3255], "blevel": 2, "type": "bullet"}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [3358, 3655], "text": ["A quick trick if you want to generate random numbers on the points in the range 0  \u2192 (number of points - 1), is to scramble the point numbers using the ", {"text": ["Sort node"], "fullpath": "/nodes/sop/sort", "scheme": "Node", "type": "link", "value": "/nodes/sop/sort"}, "'s \"Random\" mode, and then use ", {"text": ["Enumerate"], "fullpath": "/nodes/sop/enumerate", "scheme": "Node", "type": "link", "value": "/nodes/sop/enumerate"}, " to copy the scrambled point numbers into an attribute."]}], "container": true, "type": "bullet_group"}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [3660, 3860], "text": ["You can use the ", {"text": ["Geometry spreadsheet"], "fullpath": "/ref/panes/geosheet", "scheme": null, "type": "link", "value": "/ref/panes/geosheet"}, " to see the values of attributes on all points in a node. Right-click a geometry node in the network editor and choose ", {"text": ["Spreadsheet"], "type": "ui"}, "."]}], "indent": 0, "role": "item", "type": "tip", "extent": [3655, 3660]}], "container": true, "role": "item_group", "type": "tip_group"}], "indent": 0, "level": 3, "text": ["Set up point attributes"], "attrs": {"display": "pull left"}, "extent": [2057, 2089], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [3913, 4098], "text": ["Create a For-Each loop to copy the source geometry onto one point at a time, using whatever nodes you want to modify the geometry based on attributes on the point you're copying onto."]}, {"body": [{"indent": 0, "blevel": 2, "type": "ord", "extent": [4098, 4156], "text": ["In the geometry network, create a For-Each loop block."]}, {"body": [{"indent": 4, "type": "para", "extent": [4228, 4297], "text": ["The For-Each loop will process each target point one at a time."]}], "indent": 0, "text": ["Wire the target points with attributes into the For-Each begin node."], "extent": [4156, 4228], "blevel": 2, "type": "ord"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [4494, 4571], "text": ["Set ", {"text": ["Piece elements"], "type": "ui"}, " to \"Points\" to make the block loop over points."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [4571, 4698], "text": ["Turn off ", {"text": ["Piece attribute"], "type": "ui"}, " so it loops over every individual point instead of trying to group pieces by an attribute."]}], "container": true, "type": "bullet_group"}], "indent": 0, "text": ["The default settings for the ", {"text": ["foreach_end"], "type": "code"}, " node are for a certain workflow (looping over pieces, such as from a shatter) different from copying to points, so you need to change some parameters."], "extent": [4297, 4494], "blevel": 2, "type": "ord"}, {"indent": 0, "blevel": 2, "type": "ord", "extent": [4698, 4875], "text": ["Inside the loop, create a ", {"text": ["Copy to Points node"], "fullpath": "/nodes/sop/copytopoints", "scheme": "Node", "type": "link", "value": "/nodes/sop/copytopoints"}, " and wire the For-Each begin into the Copy to Points node\u2019s ", {"text": ["second"], "type": "em"}, " (\"Target points to copy to\") input."]}, {"indent": 0, "blevel": 2, "type": "ord", "extent": [4875, 5008], "text": ["Create the node(s) to generate the varying geometry and wire into the Copy to Points node\u2019s ", {"text": ["first"], "type": "em"}, " (\"Primitives to copy\") input."]}], "container": true, "type": "ord_group"}, {"indent": 0, "type": "para", "extent": [5008, 5206], "text": ["The key when generating varying geometry is to use the ", {"text": "", "value": "/expressions/point", "fallback_text": "point()", "fullpath": "/expressions/point", "scheme": "Exp", "type": "link"}, " expression function in these nodes to read attributes from the current point and use them to alter how you generate the geometry."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [5237, 5281], "text": [{"text": ["point"], "type": "code"}, " takes the following arguments:"]}, {"lang": null, "indent": 4, "type": "pre", "extent": [5281, 5367], "text": ["\n    point(path_to_geometry_node, point_number, attribute_name, index)\n    "]}, {"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [5367, 5508], "text": ["The ", {"text": ["path_to_geometry_node"], "type": "var"}, " is a path to the For-Each begin node, which inside the loop will contain the point we're copying onto."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [5508, 5623], "text": ["The ", {"text": ["point_number"], "type": "var"}, " is ", {"text": ["always 0"], "type": "strong"}, ", because inside the loop we're only ever working on one point at a time."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [5623, 5706], "text": ["The ", {"text": ["attribute_name"], "type": "var"}, " is the name of the point attribute you want to read."]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [5706, 6022], "text": ["If the attribute type is integer or float, you can leave ", {"text": ["index"], "type": "var"}, " at ", {"text": ["0"], "type": "code"}, ". If the attribute type has components (for example, R, G, B in a color, or the three axes of a vector), you need to read each component separately using individual calls to ", {"text": ["point"], "type": "code"}, " with the ", {"text": ["index"], "type": "code"}, " changed to ", {"text": ["0"], "type": "code"}, ", ", {"text": ["1"], "type": "code"}, ", ", {"text": ["2"], "type": "code"}, ", and so on."]}], "container": true, "type": "bullet_group"}], "indent": 0, "role": "item", "attrs": {"id": "point_info"}, "extent": [5206, 5212], "type": "box"}], "container": true, "role": "item_group", "type": "box_group"}, {"indent": 0, "type": "para", "extent": [6022, 6282], "text": ["For example, if you want to copy one of a set of possible pieces onto each point based on the content of the point\u2019s ", {"text": ["piecenum"], "type": "code"}, " attribute, you could create a ", {"text": ["Switch node"], "fullpath": "/nodes/sop/switch", "scheme": "Node", "type": "link", "value": "/nodes/sop/switch"}, " and switch between the different inputs using an expression like this:"]}, {"lang": null, "indent": 0, "type": "pre", "extent": [6282, 6335], "text": ["\npoint(\"../foreach_begin2\", 0, \"piecenum\", 0)\n"]}, {"indent": 0, "type": "para", "extent": [6335, 6415], "text": ["\u2026and then wire the Switch node into the Copy to Points node\u2019s first input."]}], "indent": 0, "level": 3, "text": ["Copy in a For-Each loop"], "attrs": {"display": "pull left"}, "extent": [3860, 3892], "container": true, "type": "h", "id": null}, {"body": [{"indent": 0, "type": "para", "extent": [6470, 6619], "text": ["The For-Each loop can be slow for large numbers of copies. To speed up copying, you can try wrapping the loop in a ", {"text": ["compile block"], "fullpath": "/model/compile", "scheme": null, "type": "link", "value": "/model/compile"}, "."]}], "indent": 0, "level": 3, "text": ["Compile the For-Each node"], "attrs": {"display": "pull left"}, "extent": [6415, 6449], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Varying geometry across the copies"], "extent": [1231, 1282], "container": true, "type": "h", "id": "foreach"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [6686, 6946], "text": ["Scatters points randomly and evenly across a surface or surfaces. This is very useful for creating points on the surface to copy source geometry onto. For example, you can scatter points across \"rolling hills\" geometry and instance trees onto the points."]}], "indent": 0, "type": "dt", "extent": [6638, 6686], "text": [{"text": "", "fullpath": "/copy/SOP/scatter", "scheme": "Icon", "type": "link", "value": "SOP/scatter"}, " ", {"text": ["Scatter"], "fullpath": "/nodes/sop/scatter", "scheme": "Node", "type": "link", "value": "/nodes/sop/scatter"}]}, {"body": [{"indent": 4, "type": "para", "extent": [6993, 7173], "text": ["Lets you delete points according to various criteria, such as every Nth point, or the last N points, and so on. By animating Deletion of points, you can add or remove copies."]}], "indent": 0, "type": "dt", "extent": [6946, 6993], "text": [{"text": "", "fullpath": "/copy/COMMON/delete", "scheme": "Icon", "type": "link", "value": "COMMON/delete"}, " ", {"text": ["Delete"], "fullpath": "/nodes/sop/delete", "scheme": "Node", "type": "link", "value": "/nodes/sop/delete"}]}, {"body": [{"indent": 4, "type": "para", "extent": [7239, 7282], "text": ["Creates or modifies point attributes."]}], "indent": 0, "type": "dt", "extent": [7173, 7239], "text": [{"text": "", "fullpath": "/copy/SOP/attribcreate", "scheme": "Icon", "type": "link", "value": "SOP/attribcreate"}, " ", {"text": ["Attribute Create"], "fullpath": "/nodes/sop/attribcreate", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribcreate"}]}, {"body": [{"indent": 4, "type": "para", "extent": [7351, 7420], "text": ["Lets you create or modify point attributes using VEX snippets."]}], "indent": 0, "type": "dt", "extent": [7282, 7351], "text": [{"text": "", "fullpath": "/copy/SOP/attribwrangle", "scheme": "Icon", "type": "link", "value": "SOP/attribwrangle"}, " ", {"text": ["Attribute Wrangle"], "fullpath": "/nodes/sop/attribwrangle", "scheme": "Node", "type": "link", "value": "/nodes/sop/attribwrangle"}]}], "container": true, "type": "dt_group"}], "indent": 0, "level": 2, "text": ["Useful nodes"], "extent": [6619, 6638], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"indent": 0, "blevel": 2, "type": "bullet", "extent": [7429, 7444], "text": [{"text": "", "fullpath": "/copy/duplicate", "scheme": null, "type": "link", "value": "duplicate"}]}, {"indent": 0, "blevel": 2, "type": "bullet", "extent": [7444, 7467], "text": [{"text": "", "fullpath": "/copy/tutorial_stamping", "scheme": null, "type": "link", "value": "tutorial_stamping"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [7420, 7429], "container": true, "type": "related_section", "id": "related"}], "included": ["/nodes/sop/copytopoints"], "type": "root", "attrs": {"bestbet": "stamp"}, "title": ["Copying geometry to points"]}