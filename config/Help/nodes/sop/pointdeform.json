{"body": [{"indent": 0, "text": ["Point Deform"], "type": "title", "extent": [102, 119], "level": 0}, {"indent": 0, "type": "summary", "extent": [119, 182], "text": ["Deforms geometry on an arbitrary connected point mesh."]}, {"indent": 0, "type": "para", "extent": [182, 523], "text": ["The Point Deform SOP deforms geometry according to a point cloud. The point cloud can have connectivity information. Connected points are used to deduce local transforms, allowing accurate transformation of rotating objects.  This avoids the collapsing that can occur with\nthe Lattice SOP\u2019s point mode when the transformation mesh rotates."]}, {"body": [{"body": [{"indent": 4, "type": "para", "extent": [529, 677], "text": ["The connectivity between the rest and deformed lattice should be the same.  Changing primitive counts or topology will confuse the system."]}], "indent": 0, "role": "item", "type": "note", "extent": [523, 529]}], "container": true, "role": "item_group", "type": "note_group"}, {"indent": 0, "type": "para", "extent": [677, 1149], "text": ["Like the ", {"text": ["Bone Deform"], "fullpath": "/nodes/sop/deform", "scheme": "Node", "type": "link", "value": "/nodes/sop/deform"}, ", ", {"text": ["Cloth Deform"], "fullpath": "/nodes/sop/clothdeform", "scheme": "Node", "type": "link", "value": "/nodes/sop/clothdeform"}, ", and ", {"text": ["Lattice"], "fullpath": "/nodes/sop/lattice", "scheme": "Node", "type": "link", "value": "/nodes/sop/lattice"}, " SOPs, this node captures and deforms geometry. \nIt allows you to animate proxy geometry and transfer that to a high resolution mesh, so each point of the high resolution mesh is captured by corresponding points on the proxy mesh.  Then the difference between the capture frame and the current frame is used to determine how to transform the high resolution mesh."]}, {"indent": 0, "type": "para", "extent": [1149, 1581], "text": ["This is useful if you want to deform by a point cloud and have connectivity information for that point cloud.  It works for cloth or solid like things, but does not work for wire like things (the transforms become unstable).  It does not require the connectivity to be any type, so is not limited to polygons or two manifold surfaces, making it useful for the sort of constraint networks you get out of Bullet or the grain solver."]}, {"indent": 0, "type": "para", "extent": [1581, 1778], "text": ["If an ", {"text": ["id"], "type": "code"}, " attribute is present in the rest or deformed lattices, it is\nused both for storing the capture point numbers and to determine\nthe correspondence between the rest and deformed lattices."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [1798, 1856], "text": ["The subset of input points to capture and/or deform."]}], "indent": 0, "text": ["Group"], "role": "item", "extent": [1790, 1798], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [1862, 2142], "text": ["Instead of separating the capturing and deformation into separate\n    SOPs, both operations are available with this SOP.  Setting\n    to Capture mode will output the capture weight information, which\n    can then be applied with a successive Point Deform set to Deform mode."]}, {"indent": 4, "type": "para", "extent": [2142, 2215], "text": ["Alternatively, the Capture and Deform does both operations at once."]}, {"indent": 4, "type": "para", "extent": [2215, 2335], "text": ["There is no inherent speed advantage to using one SOPs or two SOPs,\n    the choice should be dictated by workflow."]}], "indent": 0, "text": ["Mode"], "role": "item", "extent": [1856, 1862], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2358, 2560], "text": ["The maximum distance (in Houdini units) away from each point to look for points in the deforming point cloud.\n    A simple Elendt metaball weighting is then applied based on the relative distance."]}], "indent": 0, "text": ["Radius"], "role": "item", "extent": [2349, 2358], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2576, 2822], "text": ["If fewer points than this are found, the search radius is\n        increased to find at least this number of points.  This will\n        cause discontinuities in final mesh, but is often preferable to\n        having points being orphaned."]}], "indent": 0, "text": ["Minimum Points"], "role": "item", "extent": [2560, 2576], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [2838, 3044], "text": ["Provides an upper bound to the number of points that any particular\n        point can be weighted by.  Speeds up application and reduces memory\n        use, but will create discontinuities if hit."]}], "indent": 0, "text": ["Maximum Points"], "role": "item", "extent": [2822, 2838], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Capture"], "extent": [2335, 2349], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 8, "type": "para", "extent": [3075, 3204], "text": ["The computed local transform can have shear components.  This projects\n        out those leaving only a rigid transform."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [3236, 3620], "text": ["Recomputes any normals that are affected by polygons that use both\n        transformed and untransformed points. When transforming the full\n        geometry or full connected components, the results should be the same\n        as when this option is off, i.e. the normals will just be transformed\n        and not recomputed. This does nothing if ", {"text": ["P"], "type": "code"}, " is not being transformed."]}], "indent": 4, "type": "dt", "extent": [3204, 3236], "text": ["Recompute Affected Normals"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Rigid Projection"], "role": "item", "extent": [3057, 3075], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [3645, 3884], "text": ["Point and Vertex attributes that match this pattern will be\n        transformed.  Their Type Info will be used to determine how\n        they should transform, as points, vectors, and normals\n        all need different operations."]}, {"indent": 8, "type": "para", "extent": [3884, 3977], "text": ["If ", {"text": ["P"], "type": "code"}, " matches this string, then primitive transforms will\n        also be rotated."]}, {"body": [{"body": [{"indent": 12, "type": "para", "extent": [3991, 4056], "text": [{"text": ["P"], "type": "code"}, " is always deformed, regardless of this setting."]}], "indent": 8, "role": "item", "type": "note", "extent": [3977, 3991]}], "container": true, "role": "item_group", "type": "note_group"}], "indent": 0, "text": ["Attributes to Transform"], "role": "item", "extent": [3620, 3645], "type": "parameters_item"}, {"body": [{"indent": 8, "type": "para", "extent": [4083, 4231], "text": ["After capturing the weighting attributes are often no longer needed.\n        This deletes them allowing for lighter weight caches."]}], "indent": 0, "text": ["Delete Capture Attributes"], "role": "item", "extent": [4056, 4083], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Deform"], "extent": [3044, 3057], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [1778, 1790], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [4240, 4265], "text": [{"text": "", "fullpath": "/nodes/sop/lattice", "scheme": "Node", "type": "link", "value": "/nodes/sop/lattice"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [4265, 4288], "text": [{"text": "", "fullpath": "/nodes/sop/bulge", "scheme": "Node", "type": "link", "value": "/nodes/sop/bulge"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [4288, 4312], "text": [{"text": "", "fullpath": "/nodes/sop/magnet", "scheme": "Node", "type": "link", "value": "/nodes/sop/magnet"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [4312, 4337], "text": [{"text": "", "fullpath": "/nodes/sop/spring", "scheme": "Node", "type": "link", "value": "/nodes/sop/spring"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [4231, 4240], "container": true, "type": "related_section", "id": "related"}], "summary": ["Deforms geometry on an arbitrary connected point mesh."], "type": "root", "attrs": {"version": null, "tags": "reshape, model, anim", "namespace": null, "internal": "pointdeform", "context": "sop", "type": "node", "icon": "SOP/pointdeform"}, "title": ["Point Deform"]}