{"body": [{"indent": 0, "text": ["Vellum Constraints"], "type": "title", "extent": [94, 117], "level": 0}, {"indent": 0, "type": "summary", "extent": [117, 184], "text": ["Configure constraints on geometry for the Vellum solvers."]}, {"indent": 0, "type": "para", "extent": [184, 291], "text": ["The Vellum Constraints SOP creates constraints from the incoming\ngeometry suitable for the Vellum solver."]}, {"indent": 0, "type": "para", "extent": [291, 710], "text": ["All Vellum material types, such as cloth, hair, or softbody, are described\nas a set of explicit constraints between points. A Vellum configuration\nis made of two geometries.  The display and collision geometry is the\nfirst input and first output. The constraint geometry is the second input\nand second output. The two should have one-to-one point correspondence,\nso are often processed as a pair by most Vellum nodes."]}, {"indent": 0, "type": "para", "extent": [710, 941], "text": ["Vellum Constraints can generate almost all constraint types since\nmost constraints are defined by a common set of parameters.  But to\nmake it easier to setup, many tab-menu macros are present to configure\ncommon constraint types."]}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [996, 1171], "text": ["The type of constraint to generate.   This affects the visibility of\n    many of the other parameters.   Usually this is set by using the\n    appropriate tab-menu macro."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [1181, 1220], "text": ["No constraints are generated."]}], "indent": 4, "type": "dt", "extent": [1171, 1181], "text": ["None"]}, {"body": [{"indent": 8, "type": "para", "extent": [1246, 1364], "text": ["Each edge in the display geometry is turned into a distance constraint\n        maintaining that edge length."]}], "indent": 4, "type": "dt", "extent": [1220, 1246], "text": ["Distance Along Edges"]}, {"body": [{"indent": 8, "type": "para", "extent": [1391, 1573], "text": ["Each pair of triangles (or implied triangles if input is quads or\n        higher) creates a constraint maintaining the initial dihedral\n        angle between the triangles."]}], "indent": 4, "type": "dt", "extent": [1364, 1391], "text": ["Bend Across Triangles"]}, {"body": [{"indent": 8, "type": "para", "extent": [1584, 1690], "text": ["Cloth constraints consist of both distance on edge and bend across\n        triangle constraints."]}], "indent": 4, "type": "dt", "extent": [1573, 1584], "text": ["Cloth"]}, {"body": [{"indent": 8, "type": "para", "extent": [1700, 1869], "text": ["Hair constraints consist of distance on edge and bend between\n        edges.  This bend also includes the twist of the edges, allowing\n        torsion effects."]}], "indent": 4, "type": "dt", "extent": [1690, 1700], "text": ["Hair"]}, {"body": [{"indent": 8, "type": "para", "extent": [1881, 2095], "text": ["String constraints are a lighter weight hair constraint.  They\n        are a distance along the edge and the angle between edges.  But\n        no twist constraint is present, so the edges can spin freely."]}], "indent": 4, "type": "dt", "extent": [1869, 1881], "text": ["String"]}, {"body": [{"indent": 8, "type": "para", "extent": [2114, 2352], "text": ["The specified points will be pinned to the corresponding point\n        in the target geometry.  The target geometry for a Vellum\n        solver is usually the first input, so matches the animation,\n        but can be overridden."]}], "indent": 4, "type": "dt", "extent": [2095, 2114], "text": ["Pin to Target"]}, {"body": [{"indent": 8, "type": "para", "extent": [2376, 2577], "text": ["The specified points will attach to the geometry in the third input.\n        They will store their closest point at the attach frame and\n        create a distance constraint tying them to it."]}], "indent": 4, "type": "dt", "extent": [2352, 2376], "text": ["Attach to Geometry"]}, {"body": [{"indent": 8, "type": "para", "extent": [2596, 2846], "text": ["Stitch points within the same geometry together using distance\n        constraints. The points do not need to actually be connected by\n        geometry.  This is useful for keeping jackets closed or preventing\n        pockets from flapping."]}], "indent": 4, "type": "dt", "extent": [2577, 2596], "text": ["Stitch Points"]}, {"body": [{"indent": 8, "type": "para", "extent": [2860, 3124], "text": ["Each piece, as determined by the ", {"text": ["Define Pieces"], "type": "ui"}, " parameter, stores\n        its original volume and a many-point constraint is built to maintain\n        it.   The enforcement is global, so squishing one place will expand\n        another, like a balloon."]}], "indent": 4, "type": "dt", "extent": [2846, 2860], "text": ["Pressure"]}, {"body": [{"indent": 8, "type": "para", "extent": [3148, 3407], "text": ["Each tetrahedron is turned into a constraint to maintain the volume\n        of the tetrahedra.  Note this does not include any shear or\n        stretch constraints - additional distance constraints need\n        to be added to make a proper softbody."]}], "indent": 4, "type": "dt", "extent": [3124, 3148], "text": ["Tetrahedral Volume"]}, {"body": [{"indent": 8, "type": "para", "extent": [3424, 3990], "text": ["While not a constraint per-se, this will edit the ", {"text": ["weld"], "type": "code"}, " attribute\n        to cause the points to be logically fused into a single point\n        for the solve.   They will remain independent points otherwise,\n        however.   In addition, this can build bend constraints where\n        edges have become logically fused, ensuring the result acts\n        like a single flat piece.  The ", {"text": ["Vellum Post Process"], "fullpath": "/nodes/sop/vellumpostprocess", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumpostprocess"}, "\n        SOP can rewire the welded vertices after simulation so that the\n        geometry appears connected for rendering."]}], "indent": 4, "type": "dt", "extent": [3407, 3424], "text": ["Weld Points"]}, {"body": [{"indent": 8, "type": "para", "extent": [4000, 4306], "text": ["Each point will search for a nearby point that is not a member of its\n        own piece.   It will construct a distance constraint holding it to\n        that point.  This is useful for building systems that automatically\n        glue together by proximity, especially when combined with breaking."]}], "indent": 4, "type": "dt", "extent": [3990, 4000], "text": ["Glue"]}, {"body": [{"indent": 8, "type": "para", "extent": [4318, 4675], "text": ["Each point will search for a distant point that is of its own piece,\n        but which it has a straight line-of-sight to.  It will build a distance\n        constraint to that point.  This constructs a large number of toothpick\n        like internal struts that give an object stiffness and volume\n        without the expense of a fully FEM solve."]}], "indent": 4, "type": "dt", "extent": [4306, 4318], "text": ["Struts"]}, {"body": [{"indent": 8, "type": "para", "extent": [4698, 5146], "text": ["Each tetrahedron is turned into a constraint that attempts to flatten\n        along the direction specified by the ", {"text": ["materialW"], "type": "code"}, " attribute on its points,\n        or ", {"text": ["{0, 0, 1}"], "type": "code"}, " if that attribute doesn\u2019t exist.  These constraints can\n        be created with low stiffness that is animated up during the simulation\n        with ", {"text": ["Vellum Constraint Property"], "fullpath": "/nodes/dop/vellumconstraintproperty", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumconstraintproperty"}, " to\n        simulate volumetric contraction effects."]}], "indent": 4, "type": "dt", "extent": [4675, 4698], "text": ["Tetrahedral Fiber"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Constraint Type"], "role": "item", "attrs": {"id": "constrainttype"}, "extent": [953, 971], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5194, 5264], "text": ["Controls the type used for the source points for the constraint."]}], "indent": 0, "text": ["Group Type"], "role": "item", "attrs": {"id": "grouptype"}, "extent": [5161, 5174], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5287, 5476], "text": ["The group for the source points of the constraint.  These are\n    the points or primitives that are turned into the constraint or\n    are used as the starting half of the constraint."]}], "indent": 0, "text": ["Group"], "role": "item", "attrs": {"id": "group"}, "extent": [5264, 5271], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5515, 5681], "text": ["Distance and bend constraints are usually built on a triangle mesh.\n    Rather than forcing the input to be triangulated, it can be implicitly\n    triangulated."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [5691, 5741], "text": ["Do not triangulate the input implicitly."]}], "indent": 4, "type": "dt", "extent": [5681, 5691], "text": ["None"]}, {"body": [{"indent": 8, "type": "para", "extent": [5754, 5798], "text": ["Consistently split into triangles."]}], "indent": 4, "type": "dt", "extent": [5741, 5754], "text": ["Regular"]}, {"body": [{"indent": 8, "type": "para", "extent": [5815, 5926], "text": ["Attempt to reverse the triangle splitting so a series of quads\n        have a less regular structure."]}], "indent": 4, "type": "dt", "extent": [5798, 5815], "text": ["Alternating"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Triangulation"], "role": "item", "attrs": {"id": "triangulation"}, "extent": [5476, 5491], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [5947, 6073], "text": [{"text": ["mass"], "type": "code"}, " value for the points.  The mass affects how they interact with\n    POP forces and how strong the constraints are."]}], "indent": 0, "text": ["Mass"], "role": "item", "attrs": {"id": "mass"}, "extent": [5926, 5932], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6104, 6217], "text": ["Thickness of the points, stored in ", {"text": ["pscale"], "type": "code"}, ".  Used also for the\n    triangle thickness and curve thickness."]}], "indent": 0, "text": ["Thickness"], "role": "item", "attrs": {"id": "thickness"}, "extent": [6073, 6084], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6252, 6429], "text": ["Pressure constraints split the object into disjoint pieces to compute and\n    enforce the volume. Glue and Strut constraints also need a way to\n    define separate pieces."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [6449, 6519], "text": ["This attributes unique values are used to define each piece."]}], "indent": 4, "type": "dt", "extent": [6429, 6449], "text": ["From Attribute"]}, {"body": [{"indent": 8, "type": "para", "extent": [6542, 6617], "text": ["Connectivity of the input geometry is used to define the pieces."]}], "indent": 4, "type": "dt", "extent": [6519, 6542], "text": ["From Connectivity"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Define Pieces"], "role": "item", "attrs": {"id": "piecemode"}, "extent": [6217, 6232], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6653, 6756], "text": ["The attribute used to define the pieces.\n    This can either be a point or a primitive attribute."]}], "indent": 0, "text": ["Piece Attrib"], "role": "item", "attrs": {"id": "pieceattrib"}, "extent": [6617, 6631], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6779, 6918], "text": ["The points will be given this as their ", {"text": ["layer"], "type": "code"}, " attribute, useful\n    in cloth simulations to define a stacking order for Layer Shock."]}], "indent": 0, "text": ["Layer"], "role": "item", "attrs": {"id": "layer"}, "extent": [6756, 6763], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [6971, 7425], "text": ["For deforming hair geometry as input, the Vellum Solver requires an\n    ", {"text": ["orient"], "type": "code"}, " attribute that provides a stable rotation basis over time.  This\n    attribute can be created with the ", {"text": ["Guide Deform"], "fullpath": "/nodes/sop/guidedeform", "scheme": "Node", "type": "link", "value": "/nodes/sop/guidedeform"}, " SOP\n    using rest and animated skin, or if this parameter is enabled and ", {"text": ["orient"], "type": "code"}, " is\n    missing, Vellum Constraints will calculate it by extracting a\n    per-hair transform relative to the specified ", {"text": ["Rest Orientation Frame"], "type": "ui"}, "."]}], "indent": 0, "text": ["Compute Missing Orientation"], "role": "item", "attrs": {"id": "computeorient"}, "extent": [6918, 6947], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7471, 7655], "text": ["The reference frame used when computing hair orientations if\n    ", {"text": ["Compute Missing Orientation"], "type": "ui"}, " is enabled.  This should usually be set\n    to the start frame of the simulation."]}], "indent": 0, "text": ["Rest Orientation Frame"], "role": "item", "attrs": {"id": "orientframe"}, "extent": [7425, 7449], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [7696, 8092], "text": ["The newly generated constraints are displayed as guide geometry,\n    which is useful to ensure points are connected in the order expected.\n    However, the guide display can become quite complex when many constraints\n    are created, especially when trying to select Vellum geometry in the\n    viewport in downstream nodes. This parameter allows hiding the guide\n    geometry if necessary."]}], "indent": 0, "text": ["Show Guide Geometry"], "role": "item", "attrs": {"id": "showguide"}, "extent": [7655, 7676], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Geometry"], "extent": [5146, 5161], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [8160, 8211], "text": ["The type of group for the constraint targets."]}], "indent": 0, "text": ["Target Group Type"], "role": "item", "attrs": {"id": "targetgrouptype"}, "extent": [8114, 8134], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8247, 8366], "text": ["The target group.  This group specifies the second half of\n    ", {"text": ["Attach to Geometry"], "type": "ui"}, " and ", {"text": ["Stitch"], "type": "ui"}, " constraints."]}], "indent": 0, "text": ["Target Group"], "role": "item", "attrs": {"id": "targetgroup"}, "extent": [8211, 8225], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8400, 8670], "text": ["For Attach to Geometry constraints, the SOP attached to the third\n    input will be read at solve time to get the current animation data.\n    Specifying a path here will override that, useful if a different\n    animation is desired at solve time than capture time."]}], "indent": 0, "text": ["Target Path"], "role": "item", "attrs": {"id": "targetpath"}, "extent": [8366, 8379], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [8706, 8791], "text": ["Controls which frame of the third input is used for attaching the\n    geometry."]}], "indent": 0, "text": ["Attach Frame"], "role": "item", "attrs": {"id": "attachframe"}, "extent": [8670, 8684], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Target Geometry"], "extent": [8092, 8114], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [8837, 9057], "text": ["Creates the ", {"text": ["dragnormal"], "type": "code"}, " attribute and sets it to this value.  This\n    scales the drag of the point when wind forces are applied to it\n    in the normal direction of its surface, or perpendicular to the\n    curve."]}, {"indent": 4, "type": "para", "extent": [9057, 9129], "text": ["Differing normal and tangent drag is essential for flapping flags."]}], "indent": 0, "text": ["Normal Drag"], "role": "item", "attrs": {"id": "dragnormal"}, "extent": [8802, 8816], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9165, 9376], "text": ["Creates the ", {"text": ["dragtangent"], "type": "code"}, " attribute and sets it to this value.\n    This scales the drag of the point when wind forces are applied to it\n    in the tangent direction of its surface, or tangent to the curve."]}], "indent": 0, "text": ["Tangent Drag"], "role": "item", "attrs": {"id": "dragtangent"}, "extent": [9129, 9143], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Drag"], "extent": [8791, 8802], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [9431, 9687], "text": ["Points to pin to the target animation.  Usually the target animation is\n    the first input of the Vellum solver, but it can be overridden on\n    the ", {"text": ["Vellum Solver"], "fullpath": "/nodes/sop/vellumsolver", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumsolver"}, " SOP or with the ", {"text": ["Vellum Source"], "fullpath": "/nodes/dop/vellumsource", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumsource"}, "\n    DOP."]}], "indent": 0, "text": ["Pin Points"], "role": "item", "attrs": {"id": "pingroup"}, "extent": [9399, 9412], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [9715, 9775], "text": ["How to pin the point position to the target animation."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [9790, 9976], "text": ["The ", {"text": ["mass"], "type": "code"}, " attribute is set to zero, making the point a hard constraint.  However, as no original value of ", {"text": ["mass"], "type": "code"}, " is stored, it isn\u2019t possible to release this constraint later."]}], "indent": 4, "type": "dt", "extent": [9775, 9790], "text": ["Permanent"]}, {"body": [{"indent": 8, "type": "para", "extent": [9989, 10189], "text": ["The ", {"text": ["stopped"], "type": "code"}, " attribute is set to ", {"text": ["1"], "type": "code"}, " to make the point a hard constraint.  ", {"text": ["mass"], "type": "code"}, " is unaffected so a POP operation can restore the dynamics of the point later by resetting ", {"text": ["stopped"], "type": "code"}, " to ", {"text": ["0"], "type": "code"}, "."]}], "indent": 4, "type": "dt", "extent": [9976, 9989], "text": ["Stopped"]}, {"body": [{"indent": 8, "type": "para", "extent": [10199, 10380], "text": ["A zero length distance constraint is made between the point and its target location.  The Stretch ", {"text": ["Stiffness"], "type": "ui"}, " and ", {"text": ["Damping Ratio"], "type": "ui"}, " values are used for this constraint."]}], "indent": 4, "type": "dt", "extent": [10189, 10199], "text": ["Soft"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Pin Type"], "role": "item", "attrs": {"id": "pintype"}, "extent": [9687, 9697], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [10424, 10537], "text": ["In addition to holding the location of a point, for hair the orientation\n    often may also be constrained."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [10547, 10614], "text": ["Do not constrain the orientation to the target animation."]}], "indent": 4, "type": "dt", "extent": [10537, 10547], "text": ["None"]}, {"body": [{"indent": 8, "type": "para", "extent": [10636, 10793], "text": ["Use the position constraint rules.  In case of Stopped, the ", {"text": ["stopped"], "type": "code"}, "\n        attribute is set to 3 to reflect both types of update are suppressed."]}], "indent": 4, "type": "dt", "extent": [10614, 10636], "text": ["Same as Position"]}, {"body": [{"indent": 8, "type": "para", "extent": [10803, 11005], "text": ["Add a bend/twist constraint to maintain the orientation of the pinned point to that of the target animation.  The Bend ", {"text": ["Stiffness"], "type": "ui"}, " and ", {"text": ["Damping Ratio"], "type": "ui"}, " values are used for this constraint."]}], "indent": 4, "type": "dt", "extent": [10793, 10803], "text": ["Soft"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Orientation Pin Type"], "role": "item", "attrs": {"id": "pinrotation"}, "extent": [10380, 10402], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11047, 11166], "text": ["Controls if the target is updated from the animation during the solver or if only the initial\n    value is used."]}], "indent": 0, "text": ["Match Animation"], "role": "item", "attrs": {"id": "matchanimation"}, "extent": [11005, 11022], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Pin to Animation"], "extent": [9376, 9399], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [11238, 11385], "text": ["When finding a matching point to a source point, do not go through\n    the target points in order, but pick the point that is closest first."]}], "indent": 0, "text": ["Constrain to Closest Point"], "role": "item", "attrs": {"id": "useclosestpt"}, "extent": [11186, 11215], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11445, 11641], "text": ["For Attach to Geometry constraints, do not just choose the closest point,\n    but the closest position on a primitive.  The primitive number and\n    barycentric coordinates are then stored."]}], "indent": 0, "text": ["Use Closest Location on Primitive"], "role": "item", "attrs": {"id": "useclosestprim"}, "extent": [11385, 11420], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [11673, 11739], "text": ["Maximum distance to consider eligible for stitching points."]}], "indent": 0, "text": ["Max Distance"], "role": "item", "attrs": {"id": "maxdist"}, "extent": [11641, 11655], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Closest Point"], "extent": [11166, 11186], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [11803, 11998], "text": ["While glue constraints are made between points of different pieces,\n    they will only be made between points of the same cluster.   If\n    the cluster value is -1, no gluing will be done."]}], "indent": 0, "text": ["Cluster Attrib"], "role": "item", "attrs": {"id": "glue_clusterattrib"}, "extent": [11757, 11774], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12037, 12094], "text": ["Maximum distance to look for eligible glue points."]}], "indent": 0, "text": ["Max Search Dist"], "role": "item", "attrs": {"id": "glue_radius"}, "extent": [11998, 12015], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12134, 12203], "text": ["Maximum number of points to consider for eligible glue points."]}], "indent": 0, "text": ["Max Search Points"], "role": "item", "attrs": {"id": "glue_numpt"}, "extent": [12094, 12113], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12258, 12317], "text": ["Number of glue constraints to create for each point."]}], "indent": 0, "text": ["Constraints Per Point"], "role": "item", "attrs": {"id": "glue_constraintsperpt"}, "extent": [12203, 12226], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12368, 12520], "text": ["Each piece has this chance to be marked ineligible for gluing\n    and receive and generate no glue constraints.  This allows\n    for stray hairs."]}], "indent": 0, "text": ["Detach Object Chance"], "role": "item", "attrs": {"id": "glue_detach_chance"}, "extent": [12317, 12339], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12569, 12652], "text": ["Each pair of points has this chance to be being marked ineligible for gluing."]}], "indent": 0, "text": ["Detach Point Chance"], "role": "item", "attrs": {"id": "glue_point_chance"}, "extent": [12520, 12541], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [12678, 12733], "text": ["Random seed used to generate the detach chances."]}], "indent": 0, "text": ["Seed"], "role": "item", "attrs": {"id": "glue_seed"}, "extent": [12652, 12658], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Glue Search"], "extent": [11739, 11757], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [12794, 12964], "text": ["Maximum distance to create struts.   Must be large enough to cover the\n    diameter of the object, but avoiding extremely long struts can help\n    avoid artifacts."]}], "indent": 0, "text": ["Max Strut Length"], "role": "item", "attrs": {"id": "strut_maxlen"}, "extent": [12752, 12771], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13011, 13174], "text": ["Struts are created by sending a ray along the direction attribute in\n    search of the piece.  The default direction is to use the normal\n    of the surface."]}], "indent": 0, "text": ["Direction Attribute"], "role": "item", "attrs": {"id": "strut_dirattrib"}, "extent": [12964, 12985], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13219, 13340], "text": ["Invert the sense of the objects normals for sending rays, useful\n    if the incoming geometry has reversed normals."]}], "indent": 0, "text": ["Invert Normals"], "role": "item", "attrs": {"id": "strut_invertnormal"}, "extent": [13174, 13190], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13382, 13482], "text": ["Verify the goal of the strut has a normal suggesting it was properly\n    hit from the inside."]}], "indent": 0, "text": ["Test Normals"], "role": "item", "attrs": {"id": "strut_testnormals"}, "extent": [13340, 13354], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13523, 13607], "text": ["Jitter the direction the strut is sent in to break symmetry in\n    the struts."]}], "indent": 0, "text": ["Direction Jitter"], "role": "item", "attrs": {"id": "strut_jitter"}, "extent": [13482, 13500], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13663, 13717], "text": ["Maximum number of struts to add for each point."]}], "indent": 0, "text": ["Constraints Per Point"], "role": "item", "attrs": {"id": "strut_constraintsperpt"}, "extent": [13607, 13630], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13767, 13827], "text": ["Chance of a point being marked ineligible for struts."]}], "indent": 0, "text": ["Detach Point Chance"], "role": "item", "attrs": {"id": "strut_point_chance"}, "extent": [13717, 13738], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13854, 13914], "text": ["Random seed to control the jitter and detach chances."]}], "indent": 0, "text": ["Seed"], "role": "item", "attrs": {"id": "strut_seed"}, "extent": [13827, 13833], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [13949, 14052], "text": ["The initial ray for the strut needs an offset to avoid hitting\n    the surface it was sent from."]}], "indent": 0, "text": ["Ray Offset"], "role": "item", "attrs": {"id": "strut_rayoff"}, "extent": [13914, 13926], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Strut Search"], "extent": [12733, 12752], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [14105, 14301], "text": ["The stiffness of the constraint, which controls how strongly the constraint\n    pulls particles back towards its initial rest state.  To dial in initial values,\n    change by factors of 10."]}], "indent": 0, "text": ["Stiffness"], "role": "item", "attrs": {"id": "stretchstiffness"}, "extent": [14066, 14078], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14355, 14403], "text": ["Point attribute to scale the stiffness by."]}, {"indent": 4, "type": "para", "extent": [14403, 14522], "text": ["As effective changes in stiffness requires painting over orders of magnitude, this has\n    a logarithmic effect."]}], "indent": 0, "text": ["Stiffness Attribute"], "role": "item", "attrs": {"id": "stretchstiffnessattrib"}, "extent": [14301, 14322], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14561, 14608], "text": ["Single slider control over the stiffness."]}, {"indent": 4, "type": "para", "extent": [14608, 14726], "text": ["As effective changes in stiffness requires painting over orders of magnitude, this has\n    a logarithmic effect."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "stretchstiffnessscale"}, "extent": [14522, 14529], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [14771, 15020], "text": ["Stiff constraints tend to vibrate or jitter unacceptably.   Damping reduces this by bleeding energy when evaluating the constraint.  Too much damping can prevent the constraint from being satisfied, however.   Values less than 1 must be used."]}], "indent": 0, "text": ["Damping Ratio"], "role": "item", "attrs": {"id": "stretchdampingratio"}, "extent": [14726, 14741], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15070, 15140], "text": ["Attribute to adjust damping, multiplied into the damping ratio."]}], "indent": 0, "text": ["Damping Attribute"], "role": "item", "attrs": {"id": "stretchdampingattrib"}, "extent": [15020, 15039], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15177, 15252], "text": ["Single slider to control damping, multiplied into the damping ratio."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "stretchdampingscale"}, "extent": [15140, 15147], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15298, 15520], "text": ["The rest length of the distance constraints will be the original distance\n    between the points.   This scale can be used to increase or decrease\n    this.   Setting to ", {"text": ["0"], "type": "code"}, " will try to collapse the points together."]}], "indent": 0, "text": ["Rest Length Scale"], "role": "item", "attrs": {"id": "stretchrestscale"}, "extent": [15252, 15271], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [15571, 16045], "text": ["The stiffness of the constraint when being compressed below its initial rest\n    distance.  A very stiff low resolution cloth can become unbendable due to its\n    topology, rather than due to the bend constraints.  A network of triangles\n    has very few ways that it can bend if it is fully stiff.  By setting a\n    lower compression stiffness, the cloth is allowed to collapse and regain\n    its fluidity.  Usually this has to be raised with higher resolution cloth."]}], "indent": 0, "text": ["Compression Stiffness"], "role": "item", "attrs": {"id": "compressstiffness"}, "extent": [15520, 15543], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16098, 16587], "text": ["The distance from the rest length at which the stiffness of the constraint\n    decreases to zero, or increases from zero to full stiffness, depending on\n    the direction of the dropoff.  A ", {"text": ["Decreasing"], "type": "ui"}, " dropoff means that the\n    stiffness starts at full strength and decreases to zero at the Dropoff\n    distance from the rest length.  An ", {"text": ["Increasing"], "type": "ui"}, " dropoff means\n    the stiffness starts at zero and increases to full stiffness at the\n    specified distance from rest length."]}, {"indent": 4, "type": "para", "extent": [16587, 16950], "text": ["Decreasing dropoff can be useful for creating glue constraints that lose\n    stiffness as they are stretched, decreasing to zero at the specified\n    distance.  Using the same distance in the breaking ", {"text": ["Threshold"], "type": "ui"}, " with a\n    ", {"text": ["Break Type"], "type": "ui"}, " of ", {"text": ["Stretch Distance"], "type": "ui"}, " will cause the constraints to be\n    removed at the same time they reduce to zero stiffness."]}], "indent": 0, "text": ["Stiffness Dropoff"], "role": "item", "attrs": {"id": "stretchstiffnessdropoff"}, "extent": [16045, 16064], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [16996, 17134], "text": ["Enables an adjustment to the stiffness based on orientation, allowing\n    a cloth network to stretch more on one axis than another."]}], "indent": 0, "text": ["Enable Warp/Weft"], "role": "item", "attrs": {"id": "stretchanisotropy"}, "extent": [16950, 16968], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [17193, 17293], "text": ["Scale factor for cloth lined up with the material u axis.   This is a logarithmic multiplier."]}], "indent": 0, "text": ["Warp Scale"], "role": "item", "attrs": {"id": "stretchwarpscale"}, "extent": [17153, 17166], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17332, 17431], "text": ["Scale factor for cloth lined up with the material v axis.   This is a logarithmic multiplier."]}], "indent": 0, "text": ["Weft Scale"], "role": "item", "attrs": {"id": "stretchweftscale"}, "extent": [17293, 17305], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17472, 17581], "text": ["Scale factor for cloth lined up with the diagonal material uv axis.   This is a logarithmic multiplier."]}], "indent": 0, "text": ["Shear Scale"], "role": "item", "attrs": {"id": "stretchshearscale"}, "extent": [17431, 17444], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17615, 17708], "text": ["Point attribute to use to specify the coordinate frame for warp and weft computations."]}], "indent": 0, "text": ["Material UV"], "role": "item", "attrs": {"id": "materialuv"}, "extent": [17581, 17594], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [17755, 17965], "text": ["Plasticity allows an object to flow to a new rest position.  Under\n    sufficient stress, the rest coordinates are blended to the current dynamic\n    coordinates, so the object will retain its new shape."]}], "indent": 0, "text": ["Enable Plasticity"], "role": "item", "attrs": {"id": "stretchplasticity"}, "extent": [17708, 17727], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Anisotropy"], "extent": [17134, 17153], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [18030, 18198], "text": ["Below this threshold the material will return to its original shape.\n    When deformed past the threshold, it will begin to creep into\n    its new configuration."]}], "indent": 0, "text": ["Threshold"], "role": "item", "attrs": {"id": "stretchplasticthreshold"}, "extent": [17984, 17996], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18259, 18309], "text": ["Attribute to scale the stretch threshold by."]}], "indent": 0, "text": ["Threshold Attribute"], "role": "item", "attrs": {"id": "stretchplasticthresholdattrib"}, "extent": [18198, 18219], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18355, 18400], "text": ["Single scale slider for the threshold."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "stretchplasticthresholdscale"}, "extent": [18309, 18316], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18469, 18661], "text": ["The threshold can either be an absolute distance, or be a percentage distance.   A value of 0.1 as a ratio would mean stretching of 110% of compression of 90% will trigger plastic flow."]}], "indent": 0, "text": ["Ratio of Current Rest Length"], "role": "item", "attrs": {"id": "stretchplasticthresholdratio"}, "extent": [18400, 18430], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18696, 18793], "text": ["The speed at which the the material adopts its new rest lengths when\n    it begins to flow."]}], "indent": 0, "text": ["Rate"], "role": "item", "attrs": {"id": "stretchplasticrate"}, "extent": [18661, 18667], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18844, 18889], "text": ["Attribute to scale the plastic rate by."]}], "indent": 0, "text": ["Rate Attribute"], "role": "item", "attrs": {"id": "stretchplasticrateattrib"}, "extent": [18793, 18809], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [18930, 18977], "text": ["Single scale slider for the plastic rate."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "stretchplasticratescale"}, "extent": [18889, 18896], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19022, 19249], "text": ["Some plastic materials become stiffer after they've undergone deformation. These will have a hardening greater than 1.  Some become softer so will have hardening less than 1. This is a logarithmic multiplier on stiffness."]}], "indent": 0, "text": ["Hardening"], "role": "item", "attrs": {"id": "stretchplastichardening"}, "extent": [18977, 18988], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19310, 19360], "text": ["Attribute to scale the plastic hardening by."]}], "indent": 0, "text": ["Hardening Attribute"], "role": "item", "attrs": {"id": "stretchplastichardeningattrib"}, "extent": [19249, 19270], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19406, 19455], "text": ["Single scale slider for plastic hardening."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "stretchplastichardeningscale"}, "extent": [19360, 19367], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19490, 19679], "text": ["The generated stretch constraints are all added to this primitive group.  This is useful to edit them later with a ", {"text": ["Vellum Constraint Property"], "fullpath": "/nodes/dop/vellumconstraintproperty", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumconstraintproperty"}, " DOP."]}], "indent": 0, "text": ["Output Group"], "role": "item", "attrs": {"id": "stretchgrp"}, "extent": [19455, 19469], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [19740, 20068], "text": ["Ensures that a particular point can only be constrained once by the constraints in the ", {"text": ["Output Group"], "type": "ui"}, ".  When dynamically creating constraints it can be common to re-create constraints between the same points every frame.  Keeping the points unique within the output group prevents a constant accumulation of constraints."]}], "indent": 0, "text": ["Keep Unique within Output Group"], "role": "item", "attrs": {"id": "keepuniquestretch"}, "extent": [19679, 19712], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Plasticity"], "extent": [17965, 17984], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Stretch"], "extent": [14052, 14066], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [20122, 20371], "text": ["When welding points together, two outside edges may become an inside edge.\n    If they do not gain any bend constraints the seam will be weak and\n    noticeably fold or kink.  This option generates bend constraints where\n    this is detected."]}], "indent": 0, "text": ["Add Bend across Welds"], "role": "item", "attrs": {"id": "bendweld"}, "extent": [20079, 20103], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [20427, 20628], "text": ["The value of the generated bend constraints can be copied from the bend\n    of surrounding triangles, ensuring a consistent piece of cloth is\n    built without having to channel link parameters."]}], "indent": 0, "text": ["Copy Neighboring Stiffness"], "role": "item", "attrs": {"id": "bendcopystiffness"}, "extent": [20371, 20399], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [20663, 20760], "text": ["The stiffness of bend constraints.  To dial in initial values,\n    change by factors of 10."]}, {"indent": 4, "type": "para", "extent": [20760, 21056], "text": ["Note that bend constraints are based on angle differences, so higher\n    resolution cloths will require higher stiffness to exhibit similar radii\n    of curvature.   Note that very high bend stiffness on high resolution\n    models will require a very large number of iterations to converge."]}], "indent": 0, "text": ["Stiffness"], "role": "item", "attrs": {"id": "bendstiffness"}, "extent": [20628, 20639], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [21107, 21155], "text": ["Point attribute to scale the stiffness by."]}, {"indent": 4, "type": "para", "extent": [21155, 21274], "text": ["As effective changes in stiffness requires painting over orders of magnitude, this has\n    a logarithmic effect."]}], "indent": 0, "text": ["Stiffness Attribute"], "role": "item", "attrs": {"id": "bendstiffnessattrib"}, "extent": [21056, 21077], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [21310, 21357], "text": ["Single slider control over the stiffness."]}, {"indent": 4, "type": "para", "extent": [21357, 21476], "text": ["As effective changes in stiffness requires painting over orders of magnitude, this has\n    a logarithmic effect."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "bendstiffnessscale"}, "extent": [21274, 21281], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [21518, 21768], "text": ["Stiff constraints tend to vibrate or jitter unacceptably.   Damping reduces this by bleeding energy when evaluating the constraint.  Too much damping can prevent the constraint from being satisfied, however.   Values less than 1 should be used."]}], "indent": 0, "text": ["Damping Ratio"], "role": "item", "attrs": {"id": "benddampingratio"}, "extent": [21476, 21491], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [21815, 21884], "text": ["Attribute to adjust damping, multiplied into the damping ratio."]}], "indent": 0, "text": ["Damping Attribute"], "role": "item", "attrs": {"id": "benddampingattrib"}, "extent": [21768, 21787], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [21918, 21992], "text": ["Single slider to control damping, multiplied into the damping ratio."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "benddampingscale"}, "extent": [21884, 21891], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [22034, 22276], "text": ["The rest angle of the bend constraints will be the original dihedral\n    angle between the triangles.   This scale can be used to increase or\n    decrease this.   Setting to ", {"text": ["0"], "type": "code"}, " will treat the original configuration as a\n    flat sheet."]}], "indent": 0, "text": ["Rest Angle Scale"], "role": "item", "attrs": {"id": "bendrestscale"}, "extent": [21992, 22010], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [22326, 22821], "text": ["The number of degrees away from the rest angle at which the stiffness of\n    the constraint decreases to zero, or increases from zero to full stiffness, depending on\n    the direction of the dropoff.  A ", {"text": ["Decreasing"], "type": "ui"}, " dropoff means that the\n    stiffness starts at full strength and decreases to zero at the Dropoff\n    degrees from the rest angle.  An ", {"text": ["Increasing"], "type": "ui"}, " dropoff means the stiffness starts at zero and increases to full stiffness at the specified degrees away from rest angle."]}, {"indent": 4, "type": "para", "extent": [22821, 23189], "text": ["A small amount of ", {"text": ["Increasing"], "type": "ui"}, " dropoff can be useful with cloth to make it buckle\n    from a flat state very easily, adding additional wrinkling without changing the overall\n    bend stiffness and look of the cloth too significantly. Decreasing dropoff can be useful for making stretchy glue constraints that weaken right before breaking without snapping back."]}], "indent": 0, "text": ["Stiffness Dropoff"], "role": "item", "attrs": {"id": "bendstiffnessdropoff"}, "extent": [22276, 22295], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [23232, 23519], "text": ["When adding torsion-free string bend constraints, they work best when\n    the rest angle is close to straight.  Setting the max branch angle allows\n    something like a net of ropes to only have the bend constraints along\n    the straight ropes, not on the perpendicular sections."]}], "indent": 0, "text": ["Max Branch Angle"], "role": "item", "attrs": {"id": "maxbranchangle"}, "extent": [23189, 23207], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [23563, 23772], "text": ["Plasticity allows an object to flow to a new rest position.  Under\n    sufficient stress, the rest coordinates are blended to the current dynamic\n    coordinates, so the object will retain its new shape."]}], "indent": 0, "text": ["Enable Plasticity"], "role": "item", "attrs": {"id": "bendplasticity"}, "extent": [23519, 23538], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [23834, 24001], "text": ["Below this threshold the material will return to its original shape.\n    When deformed past the threshold, it will begin to creep into\n    its new configuration."]}, {"indent": 4, "type": "para", "extent": [24001, 24182], "text": ["This is an absolute angle measurement.  Because rest angles are often\n    flat, the idea of a ratio that exists for stretch constraints does not\n    apply to bend constraints."]}], "indent": 0, "text": ["Threshold"], "role": "item", "attrs": {"id": "bendplasticthreshold"}, "extent": [23791, 23803], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24240, 24287], "text": ["Attribute to scale the bend threshold by."]}], "indent": 0, "text": ["Threshold Attribute"], "role": "item", "attrs": {"id": "bendplasticthresholdattrib"}, "extent": [24182, 24203], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24330, 24374], "text": ["Single scale slider for the threshold."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "bendplasticthresholdscale"}, "extent": [24287, 24294], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24406, 24502], "text": ["The speed at which the the material adopts its new rest angles when\n    it begins to flow."]}], "indent": 0, "text": ["Rate"], "role": "item", "attrs": {"id": "bendplasticrate"}, "extent": [24374, 24380], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24550, 24595], "text": ["Attribute to scale the plastic rate by."]}], "indent": 0, "text": ["Rate Attribute"], "role": "item", "attrs": {"id": "bendplasticrateattrib"}, "extent": [24502, 24518], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24633, 24680], "text": ["Single scale slider for the plastic rate."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "bendplasticratescale"}, "extent": [24595, 24602], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24722, 24902], "text": ["Some plastic materials become stiffer after they've undergone deformation. These will have a hardening greater than 1.  Some become softer so will have hardening less than 1."]}], "indent": 0, "text": ["Hardening"], "role": "item", "attrs": {"id": "bendplastichardening"}, "extent": [24680, 24691], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [24960, 25010], "text": ["Attribute to scale the plastic hardening by."]}], "indent": 0, "text": ["Hardening Attribute"], "role": "item", "attrs": {"id": "bendplastichardeningattrib"}, "extent": [24902, 24923], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [25053, 25101], "text": ["Single scale slider for plastic hardening."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "bendplastichardeningscale"}, "extent": [25010, 25017], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [25133, 25321], "text": ["The generated stretch constraints are all added to this primitive group.  This is useful to edit them later with a ", {"text": ["Vellum Constraint Property"], "fullpath": "/nodes/dop/vellumconstraintproperty", "scheme": "Node", "type": "link", "value": "/nodes/dop/vellumconstraintproperty"}, " DOP."]}], "indent": 0, "text": ["Output Group"], "role": "item", "attrs": {"id": "bendgrp"}, "extent": [25101, 25115], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [25379, 25707], "text": ["Ensures that a particular point can only be constrained once by the constraints in the ", {"text": ["Output Group"], "type": "ui"}, ".  When dynamically creating constraints it can be common to re-create constraints between the same points every frame.  Keeping the points unique within the output group prevents a constant accumulation of constraints."]}], "indent": 0, "text": ["Keep Unique within Output Group"], "role": "item", "attrs": {"id": "keepuniquebend"}, "extent": [25321, 25354], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 3, "text": ["Plasticity"], "extent": [23772, 23791], "container": true, "type": "h", "id": null}], "indent": 0, "level": 2, "text": ["Bend"], "extent": [20068, 20079], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [25761, 26019], "text": ["Constraint primitives can be removed by the solver when sufficient deformation or stress is applied, effectively breaking those constraints.   You can also manually break constraints by deleting them during the solve to gain full control of the timing."]}, {"indent": 4, "type": "para", "extent": [26019, 26144], "text": ["Running the simulation first with visualization enabled can be useful to find what are good values for the thresholds."]}], "indent": 0, "text": ["Enable Breaking"], "role": "item", "attrs": {"id": "dobreaking"}, "extent": [25722, 25740], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [26180, 26259], "text": ["The amount of stress or displacement on a constraint to trigger a break."]}], "indent": 0, "text": ["Threshold"], "role": "item", "attrs": {"id": "breakthreshold"}, "extent": [26144, 26155], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [26307, 26356], "text": ["Point attribute to scale the threshold by."]}], "indent": 0, "text": ["Threshold Attribute"], "role": "item", "attrs": {"id": "breakscaleattrib"}, "extent": [26259, 26280], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [26384, 26428], "text": ["Single slider to scale the threshold."]}], "indent": 0, "text": ["Scale"], "role": "item", "attrs": {"id": "breakscale"}, "extent": [26356, 26363], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [26457, 26535], "text": ["This controls how the solver decides to break weld and hair constraints."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [26545, 26588], "text": ["No automated tests are performed."]}], "indent": 4, "type": "dt", "extent": [26535, 26545], "text": ["None"]}, {"body": [{"indent": 8, "type": "para", "extent": [26608, 26663], "text": ["The stretch stress must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [26588, 26608], "text": ["Stretch Stress"]}, {"body": [{"indent": 8, "type": "para", "extent": [26680, 26732], "text": ["The bend stress must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [26663, 26680], "text": ["Bend Stress"]}, {"body": [{"indent": 8, "type": "para", "extent": [26754, 26857], "text": ["The total distance from the goal location and the current location must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [26732, 26754], "text": ["Stretch Distance"]}, {"body": [{"indent": 8, "type": "para", "extent": [26876, 26973], "text": ["The ratio between the current distance and the rest distance must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [26857, 26876], "text": ["Stretch Ratio"]}, {"body": [{"indent": 8, "type": "para", "extent": [26989, 27123], "text": ["The difference between the current angle and the rest angle must exceed the threshold.  This value is specified in degrees."]}], "indent": 4, "type": "dt", "extent": [26973, 26989], "text": ["Bend Angle"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Type"], "role": "item", "attrs": {"id": "breaktypeall"}, "extent": [26428, 26434], "type": "parameters_item"}, {"body": [{"indent": 4, "type": "para", "extent": [27156, 27229], "text": ["This controls how the solver decides to break distance constraints."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [27239, 27282], "text": ["No automated tests are performed."]}], "indent": 4, "type": "dt", "extent": [27229, 27239], "text": ["None"]}, {"body": [{"indent": 8, "type": "para", "extent": [27302, 27357], "text": ["The stretch stress must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [27282, 27302], "text": ["Stretch Stress"]}, {"body": [{"indent": 8, "type": "para", "extent": [27379, 27482], "text": ["The total distance from the goal location and the current location must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [27357, 27379], "text": ["Stretch Distance"]}, {"body": [{"indent": 8, "type": "para", "extent": [27501, 27599], "text": ["The ratio between the current distance and the rest distance must exceed the threshold."]}], "indent": 4, "type": "dt", "extent": [27482, 27501], "text": ["Stretch Ratio"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Type"], "role": "item", "attrs": {"id": "breaktypestretch"}, "extent": [27123, 27129], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Breaking"], "extent": [25707, 25722], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [27659, 27868], "text": ["The scale-by-attribute functions have to apply the possible different scale attribute values on the points involved in the constraint to a single constraint.  This controls how they are blended together."]}, {"body": [{"body": [{"indent": 8, "type": "para", "extent": [27881, 27924], "text": ["The maximum scale factor is used."]}], "indent": 4, "type": "dt", "extent": [27868, 27881], "text": ["Maximum"]}, {"body": [{"indent": 8, "type": "para", "extent": [27937, 27980], "text": ["The minimum scale factor is used."]}], "indent": 4, "type": "dt", "extent": [27924, 27937], "text": ["Minimum"]}, {"body": [{"indent": 8, "type": "para", "extent": [27993, 28051], "text": ["The average of the points scale factors is used."]}], "indent": 4, "type": "dt", "extent": [27980, 27993], "text": ["Average"]}, {"body": [{"indent": 8, "type": "para", "extent": [28067, 28148], "text": ["The source points scale factor is used, such as in a stitch constraint."]}], "indent": 4, "type": "dt", "extent": [28051, 28067], "text": ["Use Source"]}, {"body": [{"indent": 8, "type": "para", "extent": [28164, 28245], "text": ["The target points scale factor is used, such as in a stitch constraint."]}], "indent": 4, "type": "dt", "extent": [28148, 28164], "text": ["Use Target"]}], "container": true, "type": "dt_group"}], "indent": 0, "text": ["Promotion Method"], "role": "item", "attrs": {"id": "attribpromote"}, "extent": [27616, 27635], "type": "parameters_item"}], "container": true, "role": "item_group", "type": "parameters_item_group"}], "indent": 0, "level": 2, "text": ["Attributes"], "extent": [27599, 27616], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Parameters", "role": "section", "extent": [941, 953], "container": true, "type": "parameters_section", "id": "parameters"}, {"body": [{"body": [{"indent": 4, "blevel": 6, "type": "bullet", "extent": [28254, 28284], "text": [{"text": "", "fullpath": "/nodes/sop/vellumsolver", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumsolver"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [28284, 28319], "text": [{"text": "", "fullpath": "/nodes/sop/vellumpostprocess", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumpostprocess"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [28319, 28348], "text": [{"text": "", "fullpath": "/nodes/sop/vellumdrape", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumdrape"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [28348, 28389], "text": [{"text": "", "fullpath": "/nodes/sop/vellumconstraints_grain", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumconstraints_grain"}]}, {"indent": 4, "blevel": 6, "type": "bullet", "extent": [28389, 28417], "text": [{"text": "", "fullpath": "/nodes/sop/vellumio", "scheme": "Node", "type": "link", "value": "/nodes/sop/vellumio"}]}], "container": true, "type": "bullet_group"}], "indent": 0, "level": 1, "text": "Related", "role": "section", "extent": [28245, 28254], "container": true, "type": "related_section", "id": "related"}], "summary": ["Configure constraints on geometry for the Vellum solvers."], "type": "root", "attrs": {"version": null, "namespace": null, "internal": "vellumconstraints", "context": "sop", "type": "node", "icon": "DOP/vellumconstraints"}, "title": ["Vellum Constraints"]}