{"body": [{"indent": 0, "text": [{"text": "hou.", "type": "supertitle"}, "NetworkMovableItem"], "type": "title", "extent": [0, 27], "level": 0}, {"indent": 0, "type": "summary", "extent": [120, 233], "text": ["The base class for all visible elements within a network, such as Nodes, Network Boxes, and Sticky Notes."]}, {"indent": 0, "type": "para", "extent": [233, 669], "text": ["Each movable item has a position, color, and other attributes that allow for\ncommon interactions in the network editor. All movable items will have a\nparent network (except the node represented by ", {"text": ["hou.node('/')"], "type": "code"}, "), and may be\ncontained by a ", {"text": "", "value": "/hom/hou/NetworkBox", "fallback_text": "hou.NetworkBox", "fullpath": "/hom/hou/NetworkBox", "scheme": "Hom", "type": "link"}, ". Not all movable items have a name, but\nall have a numeric session id, which is a unique number within a given\nHoudini session for a given subclass of ", {"text": ["NetworkMovableItem"], "type": "code"}, "."]}, {"body": [{"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [822, 897], "text": ["Return this node\u2019s name.  See also ", {"fragment": "#path", "text": "", "value": "/hom/hou/NetworkMovableItem#path", "fallback_text": "hou.NetworkMovableItem.path", "fullpath": "/hom/hou/NetworkMovableItem#path", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["name(self)"], "type": "code"}, "  \u2192 ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::name", "replaces": "/commands/opname /expressions/opname /expressions/optypeinfo"}, "extent": [699, 725], "type": "methods_item", "id": "name"}, {"body": [{"indent": 4, "type": "para", "extent": [1025, 1582], "text": ["Set the name of this node.  Raises ", {"text": "", "value": "/hom/hou/OperationFailed", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed", "scheme": "Hom", "type": "link"}, " if the new\n    name contains characters other than letters, numbers, periods, dashes, or\n    underscores.  Raises ", {"text": "", "value": "/hom/hou/OperationFailed", "fallback_text": "hou.OperationFailed", "fullpath": "/hom/hou/OperationFailed", "scheme": "Hom", "type": "link"}, " if the node could not be\n    renamed (for example, another node already exists with the name, the node\n    is the root node or top-level manager (e.g. /obj), or the node is inside\n    a locked asset).  If the unique_name parameter is set to True, the\n    supplied name may be changed to ensure that it doesn\u2019t match the name of\n    any existing node."]}], "indent": 0, "text": [{"text": ["setName(self, name, unique_name=False)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::setName", "replaces": "/commands/opname /expressions/opname"}, "extent": [897, 941], "type": "methods_item", "id": "setName"}, {"body": [{"indent": 4, "type": "para", "extent": [1694, 1799], "text": ["Return the value of the last set of digits inside the node\u2019s name, or\n    0 if there are no digits."]}, {"indent": 4, "type": "para", "extent": [1799, 1909], "text": ["For example, the result is ", {"text": ["102"], "type": "code"}, " for a node named ", {"text": ["geo102"], "type": "code"}, ", and ", {"text": ["34"], "type": "code"}, " for\n    a node named ", {"text": ["light12to34"], "type": "code"}, "."]}], "indent": 0, "text": [{"text": ["digitsInName(self)"], "type": "code"}, "  \u2192 ", {"text": ["int"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::digitsInName", "replaces": "/expressions/opdigits"}, "extent": [1582, 1615], "type": "methods_item", "id": "digitsInName"}, {"body": [{"indent": 4, "type": "para", "extent": [2042, 2122], "text": ["Return the full path (i.e. starting with ", {"text": ["/"], "type": "code"}, ") of this node in the network."]}], "indent": 0, "text": [{"text": ["path(self)"], "type": "code"}, "  \u2192 ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::path", "replaces": "/expressions/opfullpath /expressions/opinputpath /expressions/opoutputpath"}, "extent": [1909, 1934], "type": "methods_item", "id": "path"}, {"body": [{"indent": 4, "type": "para", "extent": [2255, 2322], "text": ["Return a relative path to another node object from this node."]}, {"lang": "pycon", "indent": 4, "type": "pre", "extent": [2322, 2640], "text": ["\n    >>> box1 = hou.node(\"/obj/box_object1/box1\")\n    >>> sphere1 = hou.node(\"/obj/sphere_object1/sphere1\")\n    >>> box1.relativePathTo(sphere1)\n    '../../sphere_object1/sphere1'\n    >>> hou.node(\"/obj\").relativePathTo(box1)\n    'box_object1/box1'\n    >>> box1.relativePathTo(box1)\n    '.'\n    "]}], "indent": 0, "text": [{"text": ["relativePathTo(self, base_node)"], "type": "code"}, "  \u2192 ", {"text": ["str"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::relativePathTo", "replaces": "/expressions/oprelativepath"}, "extent": [2122, 2168], "type": "methods_item", "id": "relativePathTo"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Name and path"], "extent": [678, 699], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [2739, 2785], "text": ["Return the node that contains this item."]}, {"indent": 4, "type": "para", "extent": [2785, 2866], "text": ["Note that this method returns None if the item is the root node (i.e. ", {"text": ["/"], "type": "code"}, ")."]}, {"lang": "pycon", "indent": 4, "type": "pre", "extent": [2866, 3009], "text": ["\n    >>> hou.node(\"/obj/box_object1\").parent()\n    <hou.Node at /obj>\n    >>> print hou.node(\"/\").parent()\n    None\n    "]}], "indent": 0, "text": [{"text": ["parent(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Node", "fallback_text": "hou.Node", "fullpath": "/hom/hou/Node", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::parent"}, "extent": [2657, 2694], "type": "methods_item", "id": "parent"}, {"body": [{"indent": 4, "type": "para", "extent": [3128, 3237], "text": ["Returns the parent network box which contains this item, or None\n    if it is not inside a network box."]}], "indent": 0, "text": [{"text": ["parentNetworkBox(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/NetworkBox", "fallback_text": "hou.NetworkBox", "fullpath": "/hom/hou/NetworkBox", "scheme": "Hom", "type": "link"}, " or ", {"text": ["None"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::parentNetworkBox"}, "extent": [3009, 3072], "type": "methods_item", "id": "parentNetworkBox"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Hierarchy"], "extent": [2640, 2657], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [3372, 3415], "text": ["Return whether this item is selected."]}, {"indent": 4, "type": "para", "extent": [3415, 3454], "text": ["See also ", {"text": "", "value": "/hom/hou/selectedNodes", "fallback_text": "hou.selectedNodes", "fullpath": "/hom/hou/selectedNodes", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["isSelected(self)"], "type": "code"}, "  \u2192 ", {"text": ["bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::isSelected", "replaces": "/commands/opget /expressions/opflag"}, "extent": [3253, 3286], "type": "methods_item", "id": "isSelected"}, {"body": [{"indent": 4, "type": "para", "extent": [3568, 3636], "text": ["Equivalent to calling ", {"fragment": "#isSelected", "text": "", "value": "/hom/hou/NetworkMovableItem#isSelected", "fallback_text": "hou.NetworkMovableItem.isSelected", "fullpath": "/hom/hou/NetworkMovableItem#isSelected", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["isPicked(self)"], "type": "code"}, "  \u2192 ", {"text": ["bool"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::isPicked", "replaces": "/commands/opget /expressions/opflag"}, "extent": [3454, 3484], "type": "methods_item", "id": "isPicked"}, {"body": [{"indent": 4, "type": "para", "extent": [3808, 4059], "text": ["Select or deselect this item, optionally deselecting all other selected\n    items in this network. If ", {"text": ["show_asset_if_selected"], "type": "code"}, " is True, and this item\n    is a ", {"text": ["Node"], "type": "code"}, ", then the panes will show the top-level asset of the selected\n    item instead."]}], "indent": 0, "text": [{"text": ["setSelected(self, on, clear_all_selected=False, show_asset_if_selected=False)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::setSelected", "replaces": "/commands/opset /expressions/opselect"}, "extent": [3636, 3719], "type": "methods_item", "id": "setSelected"}, {"body": [{"indent": 4, "type": "para", "extent": [4171, 4292], "text": ["Equivalent to calling ", {"fragment": "#setSelected", "text": "", "value": "/hom/hou/NetworkMovableItem#setSelected", "fallback_text": "hou.NetworkMovableItem.setSelected", "fullpath": "/hom/hou/NetworkMovableItem#setSelected", "scheme": "Hom", "type": "link"}, " with\n    default values for all optional parameters."]}], "indent": 0, "text": [{"text": ["setPicked(self, on)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::setPicked", "replaces": "/commands/opset /expressions/opselect"}, "extent": [4059, 4084], "type": "methods_item", "id": "setPicked"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Selection"], "extent": [3237, 3253], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [4415, 4480], "text": ["Return the color of this item\u2019s tile in the network editor."]}], "indent": 0, "text": [{"text": ["color(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Color", "fallback_text": "hou.Color", "fullpath": "/hom/hou/Color", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::color", "replaces": "/commands/opcolor"}, "extent": [4307, 4344], "type": "methods_item", "id": "color"}, {"body": [{"indent": 4, "type": "para", "extent": [4581, 4677], "text": ["Sets the color of this item\u2019s tile in the network editor to the\n    given ", {"text": "", "value": "/hom/hou/Color", "fallback_text": "hou.Color", "fullpath": "/hom/hou/Color", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["setColor(self, color)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::setColor", "replaces": "/commands/opcolor"}, "extent": [4480, 4507], "type": "methods_item", "id": "setColor"}, {"body": [{"indent": 4, "type": "para", "extent": [4771, 5154], "text": ["Returns an integer value that uniquely identifies this item\n    in a given Houdini session. This id is only guaranteed to be unique\n    in a single Houdini process. It is useful as a quick and easy way to\n    save a restore a reference to an item. It is also only unique for\n    a specific item subclass. So there may be a ", {"text": ["Node"], "type": "code"}, " with the same\n    session id as a ", {"text": ["NetworkBox"], "type": "code"}, "."]}, {"indent": 4, "type": "para", "extent": [5154, 5475], "text": ["See ", {"text": "", "value": "/hom/hou/nodeBySessionId", "fallback_text": "hou.nodeBySessionId", "fullpath": "/hom/hou/nodeBySessionId", "scheme": "Hom", "type": "link"}, " to turn a session id back into a node,\n    or ", {"text": "", "value": "/hom/hou/networkBoxBySessionId", "fallback_text": "hou.networkBoxBySessionId", "fullpath": "/hom/hou/networkBoxBySessionId", "scheme": "Hom", "type": "link"}, " to turn a session id back into a\n    network box, or more generally, ", {"text": "", "value": "/hom/hou/itemBySessionId", "fallback_text": "hou.itemBySessionId", "fullpath": "/hom/hou/itemBySessionId", "scheme": "Hom", "type": "link"}, " to turn a\n    session id combined with an enum value indicating the item subclass\n    into an item of that type."]}], "indent": 0, "text": [{"text": ["sessionId(self)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::sessionId", "replaces": "/expressions/opid"}, "extent": [4677, 4698], "type": "methods_item", "id": "sessionId"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Metadata"], "extent": [4292, 4307], "container": true, "type": "h", "id": null}, {"body": [{"body": [{"body": [{"indent": 4, "type": "para", "extent": [5605, 5737], "text": ["Return the position of this item\u2019s tile in the network editor graph as\n    a ", {"text": ["Vector2"], "type": "code"}, ". See also ", {"text": ["move()"], "type": "code"}, " and ", {"text": ["setPosition()"], "type": "code"}, "."]}], "indent": 0, "text": [{"text": ["position(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Vector2", "fallback_text": "hou.Vector2", "fullpath": "/hom/hou/Vector2", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::position", "replaces": "/commands/oplocate"}, "extent": [5488, 5530], "type": "methods_item", "id": "position"}, {"body": [{"indent": 4, "type": "para", "extent": [5847, 5997], "text": ["Sets the position of this item\u2019s tile in the network editor graph.\n    Raises ", {"text": "", "value": "/hom/hou/InvalidInput", "fallback_text": "hou.InvalidInput", "fullpath": "/hom/hou/InvalidInput", "scheme": "Hom", "type": "link"}, " if the item cannot have the given position."]}], "indent": 0, "text": [{"text": ["setPosition(self, vector2)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::setPosition", "replaces": "/commands/oplocate"}, "extent": [5737, 5769], "type": "methods_item", "id": "setPosition"}, {"body": [{"indent": 4, "type": "para", "extent": [6093, 6203], "text": ["Moves this item\u2019s tile in the network editor graph by the increments in\n    the given ", {"text": "", "value": "/hom/hou/Vector2", "fallback_text": "hou.Vector2", "fullpath": "/hom/hou/Vector2", "scheme": "Hom", "type": "link"}, "."]}, {"indent": 4, "type": "para", "extent": [6203, 6260], "text": ["To position a item absolutely, use ", {"text": ["setPosition()"], "type": "code"}, "."]}, {"indent": 4, "type": "para", "extent": [6260, 6325], "text": ["To get the item\u2019s current graph position, use ", {"text": ["position()"], "type": "code"}, "."]}, {"indent": 4, "type": "para", "extent": [6325, 6415], "text": ["Raises ", {"text": "", "value": "/hom/hou/InvalidInput", "fallback_text": "hou.InvalidInput", "fullpath": "/hom/hou/InvalidInput", "scheme": "Hom", "type": "link"}, " if the item cannot move to the position\n    specified."]}], "indent": 0, "text": [{"text": ["move(self, vector2)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::move", "replaces": "/commands/oplocate"}, "extent": [5997, 6022], "type": "methods_item", "id": "move"}, {"body": [{"indent": 4, "type": "para", "extent": [6529, 6591], "text": ["Equivalent to calling ", {"fragment": "#move", "text": "", "value": "/hom/hou/NetworkMovableItem#move", "fallback_text": "hou.NetworkMovableItem.move", "fullpath": "/hom/hou/NetworkMovableItem#move", "scheme": "Hom", "type": "link"}, "."]}], "indent": 0, "text": [{"text": ["shiftPosition(self, vector2)"], "type": "code"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::shiftPosition", "replaces": "/commands/oplocate"}, "extent": [6415, 6449], "type": "methods_item", "id": "shiftPosition"}, {"body": [{"indent": 4, "type": "para", "extent": [6671, 6760], "text": ["Return the size of this item\u2019s tile in the network editor graph as a\n    ", {"text": ["Vector2"], "type": "code"}, "."]}], "indent": 0, "text": [{"text": ["size(self)"], "type": "code"}, "  \u2192 ", {"text": "", "value": "/hom/hou/Vector2", "fallback_text": "hou.Vector2", "fullpath": "/hom/hou/Vector2", "scheme": "Hom", "type": "link"}], "role": "item", "attrs": {"cppname": "HOM_NetworkMovableItem::size"}, "extent": [6591, 6628], "type": "methods_item", "id": "size"}], "container": true, "role": "item_group", "type": "methods_item_group"}], "indent": 0, "level": 2, "text": ["Layout"], "extent": [5475, 5488], "container": true, "type": "h", "id": null}], "indent": 0, "level": 1, "text": "Methods", "role": "section", "extent": [669, 678], "container": true, "type": "methods_section", "id": "methods"}], "summary": ["The base class for all visible elements within a network, such as Nodes, Network Boxes, and Sticky Notes."], "type": "root", "attrs": {"cppname": "HOM_NetworkMovableItem", "type": "homclass", "superclass": "hou.NetworkItem", "group": "nodes"}, "title": [{"text": "hou.", "type": "supertitle"}, "NetworkMovableItem"]}